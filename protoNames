int _strlen(char *s) => int strlength(char *str);
int _strcmp(char *s1, char *s2) => int str_compare(char *str1, char *str2);
int shell(char *prog_name, FILE *input_file, char **env) => int simple_shell(char *name_of_prog, FILE *input, char **env)
void my_exit(shdate_t *shell_data) => void exitt(shdata_t *shell_data);
void _env(shdata_t *shell_data) => void _env_ron(shdata_t *data_in_shell);
bool is_builtin(char *command) => bool built_in(char *cmd);
char *_strchr(char *s, char c) => char *str_chr(char *s, char c);
char *_strncpy(char *dest, char *src, int n) => char *strn_cpy(char *dest, char*source, int i);
void is_executable(shdata_t *shell_data, char **full_path, int *flag) => void executable(shdata_t *shell_data, char **full_path, int *flag);
int child_pid(shdata_t *shell_data, char *path) => int c_pid(shdata_t *shell_data,  char *path);
char *_strdup(char *str) => char *str_dup(char *s);
char *-basename(char *path) => char *base_name(char *path);
int stderror_printf(FILE *stream, const char *str) => int stderror_print(FILE *stream, const char *str);
char *_strcat(char *dest, char *src, int n) => char *str_cat(char *dest, char *src, int n);
int _putchar(char c) => int put_char(char c);
void my_printf(const char *format, ...) => void print_f(const char *format, ...);
shdata_t *create_shdata(char **env) => shdata_t *create_shell_data(char **env);
void free_shdata(shdat_t *shell_data) => void shdata_free(shdat_t *shell_data);
void tokenize(shdata_t *shell_data, unsigned int *old_cmd) => void tokeni_ze(shdata_t *shell_data, unsigned int *rec_cmd);
void _free(void **ptr) => void free_p(void **ptr);
char *_memcpy(char *dest, char *src, unsigned int n) => char *mem_cpy(char *dest, char *src, unsigned int n);
void _realloc(void *ptr, unsigned int old, unsigned int new_size) => void re_alloc(void *ptr, unsigned int past, unsigned int n_size);
int exec_check(shdata_t *shell_data, char *prog_name) => int execute_check(shdata *shell_data, char *program_name);
char *_strcpy(char *dest, char *src) => char *str_cpy(char *dest, char *src);
char *_strcat(char *dest, char *src) => char *str_cat(char *dest, char *src);